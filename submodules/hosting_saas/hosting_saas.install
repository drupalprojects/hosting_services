<?php
/**
 * @file
 * Install, update, and uninstall functions for Aegir SaaS.
 */

/**
 * Implements hook_install().
 */
function hosting_saas_install() {
  // Add role.
  $roles = user_roles();
  if (!in_array(HOSTING_SAAS_ROLE, $roles)) {
    $role = new stdClass();
    $role->name = HOSTING_SAAS_ROLE;
    user_role_save($role);
    drupal_set_message(t('Added user role %role.', array(
      '%role' => HOSTING_SAAS_ROLE,
    )));
  }

  // Add user.
  if (user_load_by_name(HOSTING_SAAS_USER) === FALSE) {
    $role = user_role_load_by_name(HOSTING_SAAS_ROLE);
    $user = array(
      'name' => HOSTING_SAAS_USER,
      // Disable it so that it can't be used for logins.
      'status' => 0,
      'roles' => array(
        DRUPAL_AUTHENTICATED_RID => 'authenticated user',
        $role->rid => HOSTING_SAAS_ROLE,
      ),
    );
    user_save('', $user);
    drupal_set_message(t('Added user %user.', array(
      '%user' => HOSTING_SAAS_USER,
    )));
  }

  // Set the role to be used by Services API Key Authentication.
  // Issue a warning if it's already been set.
  if ($auth_role = variable_get('service_api_key_role', '')) {
    drupal_set_message(t('The Services API Key Authentication role was previously set to %role.', array(
      '%role' => $auth_role,
    )), 'warning');
  }
  variable_set('service_api_key_role', HOSTING_SAAS_ROLE);
  drupal_set_message(t('The Services API Key Authentication role has been set to %role.', array(
    '%role' => HOSTING_SAAS_ROLE,
  )));
}

/**
 * Implements hook_uninstall().
 *
 * @todo Delete any other variables that aren't listed here.
 */
function hosting_saas_uninstall() {
  // Load constants and other things from the module file.
  drupal_load('module', 'hosting_saas');

  // Remove any set variables.
  variable_del('hosting_saas_api_key');

  // Remove user.
  if ($user = user_load_by_name(HOSTING_SAAS_USER)) {
    user_delete($user->uid);
    drupal_set_message(t('Removed user %user.', array(
      '%user' => HOSTING_SAAS_USER,
    )));
  }

  // Remove role.
  user_role_delete(HOSTING_SAAS_ROLE);
  drupal_set_message(t('Removed role %role.', array(
    '%role' => HOSTING_SAAS_ROLE,
  )));
}

