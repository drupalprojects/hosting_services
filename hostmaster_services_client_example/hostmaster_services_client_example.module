<?php 


/*
 * Implementation of hook_nodeapi
 */
function hostmaster_services_client_example_nodeapi( &$node, $op, $a3 = NULL, $a4 = NULL ){
if(db_result(db_query("SELECT COUNT(*) FROM {site_create_node_type} WHERE node_type = '%s'", $node->type)) > 0 ){
		switch($op){
			case 'insert':
				db_query("INSERT INTO {site_create_node} (vid, nid, site_nid, server, platform, profile) 
				VALUES (%d, %d, %d, %d, %d, %d )",
				$node->vid, $node->nid, $node->site_nid, $node->server, $node->platform, $node->profile);
				
		        require_once(drupal_get_path('module', 'hostmaster_services_client_example').'/drupal.xmlrpc.inc' );
            	$aegir = new DrupalXMLrpc(variable_get('site_create_domain_access', ''), 
            	variable_get('site_create_api_key', ''), 
            	variable_get('site_create_aegir_address', '').'/services/xmlrpc', TRUE);
            	// We must login to create sites
            	$RemoteUser = $aegir->userLogin(variable_get('site_create_username', ''), 
            	variable_get('site_create_password', '') );
            	if( true ){ 
            		global $user;
            			$send = Array(
            				'title' => $node->title,
            				'server' => $node->server,
            				'platform' => $node->platform,
            				'profile' => $node->profile,
            				'client' => $user->mail,
            				'site_options' => '',
            				'uid' => $RemoteUser->uid,
            				'nid' => 0
            			);
            			$siteNode = $aegir->send('site.save', $send);
            			if(isset($siteNode)){
            				$node->site_nid = $siteNode->nid;
            				node_save($node);	
            				$aegir->userLogout; // House Cleaning logout our user
            				return $node;
            			} else {
            				$aegir->userLogout; // House Cleaning logout our user
            			  // Failed to create site
            			}
            			
            		} else { 
            		   // Failed to login
            		}
				
				
			break;
			case 'update':
			
				if($node->revision){
					db_query("INSERT INTO {site_create_node} (vid, nid, site_nid, server, platform, profile) 
					VALUES (%d, %d, %d, %d, %d, %d )",
					$node->vid, $node->nid, $node->site_nid, $node->server, $node->platform, $node->profile);
				
				} else {
					db_query("UPDATE {site_create_node} SET site_nid = %d, server = %d, platform = %d, profile = %d WHERE vid = %d",
					$node->site_nid, $node->server, $node->platform, $node->profile, $node->vid);
				
				}
			break;
			case 'delete':
				db_query('DELETE FROM {site_create_node} WHERE nid = %d', $node->nid);
			break;
			case 'delete_revision':
				db_query('DELETE FROM {site_create_node} WHERE vid = %d',$node->vid);
			break;
			case 'load':
				$site_node = db_fetch_object(db_query("SELECT * FROM {site_create_node} WHERE vid = %d AND nid = %d", $node->vid, $node->nid));
				$node->site_nid = $site_node->site_nid;
				$node->server = $site_node->server;
				$node->platform = $site_node->platform;
				$node->profile = $site_node->profile;  
			break;	
		}
	}
}

/*
 * Implementation of hook_form_alter
 */
function hostmaster_services_client_example_form_alter( &$form, &$form_state, $form_id ){
  
if ($form['#id'] == 'node-type-form') {	
    $enabled = db_result(db_query("SELECT COUNT(*) FROM {site_create_node_type} WHERE node_type = '%s'", $form['#node_type']->type));
    $form['enable_site_fields'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable Website Creation Fields'),
      '#default_value' => ($enabled) ? TRUE : FALSE,
    );
    $form['#submit'][] = 'site_node_type_submit';
  } else if ($form['#id'] == 'node-form' && db_result(db_query("SELECT COUNT(*) FROM {fengafim_node_type} WHERE node_type = '%s'", $form['#node']->type)) > 0) {
     	$form['site_nid'] = array(
			'#type' => 'hidden',
			'#default_value' => $form['#node']->site_nid,
			'#value' => $form['#node']->site_nid
		);
		$form['server'] = array(
			'#type' => 'textfield',
			'#title' => t('Server'),
			'#default_value' => $form['#node']->server
		);
		$form['platform'] = array(
			'#type' => 'textfield',
			'#title' => t('Platform'),
			'#default_value' => $form['#node']->platform
		);	
		$form['profile'] = array(
			'#type' => 'textfield',
			'#title' => t('Profile'),
			'#default_value' => $form['#node']->profile
		);
		
	}
	
}

/*
 * Implementation of hook_form_submit
 */
function site_node_type_submit($form, &$form_state ){	
	if($form_state['values']['enable_site_fields'] & 
	    db_result(db_query("SELECT COUNT(*) FROM {site_create_node_type} WHERE node_type = '%s'", 
	    $form['#node_type']->type)) == 0){
		db_query("INSERT INTO {site_create_node_type} (node_type) VALUES ('%s')", $form['#node_type']->type);
	} else {
		db_query("DELETE FROM {site_create_node_type} WHERE node_type = '%s'", $form['#node_type']->type);
	} 
}

/*
 * Implementation of hook_menu
 */
function hostmaster_services_client_example_menu(){
  $items['admin/settings/hostmaster_services_client'] = array(
    'title' => t('Hostmaster Services API Client'),
    'description' => t('Configure the Hostmaster Services API Client'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('site_create_client'),
    'access arguments' => array('configure Hostmaster Services API Client')
  );
  
  return $items;
}


/*
 * Impelmentation of hook_perm
 */
function site_create_client($form_state){
  $form['site_create_domain_access'] = array(
		'#title' => t('Services Domain Access)'),
		'#description' => t('Sets the domain access field that is setup for Services API'),
		'#type' => 'textfield',
		'#default_value' => variable_get('site_create_domain_access', ''),
		'#required' => TRUE
	);
	
	$form['site_create_api_key'] = array(
		'#title' => t('Services API Key (On Aegir)'),
		'#description' => t('This is the Services API Key that gets you access into Aegir via Services API'),
		'#type' => 'textfield',
		'#default_value' => variable_get('site_create_api_key', '') 
	);
	
	$form['site_create_aegir_address'] = array(
		'#title' => t('URL for Aegir'),
		'#description' => t('Enter the address for Aegir'),
		'#type' => 'textfield',
		'#default_value' => variable_get('site_create_aegir_address', ''),
		'#required' => TRUE
	);	
	
	$form['site_create_aegir_username'] = array(
		'#title' => t('Username'),
		'#description' => t('Username to login with'),
		'#default_value' => variable_get('site_create_aegir_username', ''),
		'#type' => 'textfield'
	);
	
	$form['site_create_aegir_password'] = array(
		'#title' => t('Password'),
		'#description' => t('Enter the password you use'),
		'#default_value' => variable_get('site_create_aegir_password', ''),
		'#type' => 'password'
	);
	
	$form['submit'] = array(
		'#value' => t('Save Settings'),
		'#type' => 'submit'
	);
	return $form;
}

/*
 * Implementation of hook_form_submit
 */
function site_create_client_submit($form, &$form_state){
	variable_set('site_create_domain_access', $form_state['values']['site_create_domain_access']);
	variable_set('site_create_api_key', $form_state['values']['fengafim_api_key']);
	variable_set('site_create_aegir_address', $form_state['values']['fengafim_aegir_address']);
	variable_set('site_create_aegir_username', $form_state['values']['site_create_aegir_username']);
	variable_set('site_create_aegir_password', $form_state['values']['site_create_aegir_password']);
}


?>